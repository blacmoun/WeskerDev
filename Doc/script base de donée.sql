-- MySQL Script generated by MySQL Workbench
-- Wed Nov 29 10:22:28 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema undertale
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema undertale
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `undertale` DEFAULT CHARACTER SET utf8 ;
USE `undertale` ;

-- -----------------------------------------------------
-- Table `undertale`.`game`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `undertale`.`game` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `chaptersTitle` VARCHAR(100) NOT NULL,
  `date` DATE NOT NULL,
  `lastSavePoint` VARCHAR(50) NULL,
  `gamecol` VARCHAR(45) NULL,
  `playedTime` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `undertale`.`player`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `undertale`.`player` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `game_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_player_game_idx` (`game_id` ASC) VISIBLE,
  CONSTRAINT `fk_player_game`
    FOREIGN KEY (`game_id`)
    REFERENCES `undertale`.`game` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `undertale`.`choice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `undertale`.`choice` (
  `id` INT NOT NULL,
  `current choice` INT NULL,
  `player_id` INT NOT NULL,
  `game_id` INT NOT NULL,
  PRIMARY KEY (`id`, `player_id`, `game_id`),
  INDEX `fk_player_has_game_game2_idx` (`game_id` ASC) VISIBLE,
  INDEX `fk_player_has_game_player2_idx` (`player_id` ASC) VISIBLE,
  CONSTRAINT `fk_player_has_game_player2`
    FOREIGN KEY (`player_id`)
    REFERENCES `undertale`.`player` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_player_has_game_game2`
    FOREIGN KEY (`game_id`)
    REFERENCES `undertale`.`game` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `undertale`.`restore`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `undertale`.`restore` (
  `id` INT NOT NULL,
  `player_id` INT NOT NULL,
  `game_id` INT NOT NULL,
  PRIMARY KEY (`id`, `player_id`, `game_id`),
  INDEX `fk_player_has_game_game1_idx` (`game_id` ASC) VISIBLE,
  INDEX `fk_player_has_game_player1_idx` (`player_id` ASC) VISIBLE,
  CONSTRAINT `fk_player_has_game_player1`
    FOREIGN KEY (`player_id`)
    REFERENCES `undertale`.`player` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_player_has_game_game1`
    FOREIGN KEY (`game_id`)
    REFERENCES `undertale`.`game` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `undertale`.`choice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `undertale`.`choice` (
  `id` INT NOT NULL,
  `current choice` INT NULL,
  `player_id` INT NOT NULL,
  `game_id` INT NOT NULL,
  PRIMARY KEY (`id`, `player_id`, `game_id`),
  INDEX `fk_player_has_game_game2_idx` (`game_id` ASC) VISIBLE,
  INDEX `fk_player_has_game_player2_idx` (`player_id` ASC) VISIBLE,
  CONSTRAINT `fk_player_has_game_player2`
    FOREIGN KEY (`player_id`)
    REFERENCES `undertale`.`player` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_player_has_game_game2`
    FOREIGN KEY (`game_id`)
    REFERENCES `undertale`.`game` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
